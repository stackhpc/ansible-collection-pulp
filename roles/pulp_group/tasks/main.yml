---

- name: Get information for each group
  uri:
    url: "{{ pulp_group_url }}?name={{ item.name }}"
    user: "{{ pulp_username }}"
    password: "{{ pulp_password }}"
    method: GET
    status_code: 200
    force_basic_auth: true
  loop: "{{ pulp_groups }}"
  register: groups_get_result

- name: Reset groups facts
  set_fact:
    remove_groups: []
    create_groups: []

- name: Set groups to remove fact
  set_fact:
    remove_groups: "{{ remove_groups + [group.json.results[0]] }}"
  loop: "{{ groups_get_result.results }}"
  loop_control:
    loop_var: "group"
    label: "{{ group.item.name }}"
  when:
    - group.json.count == 1
    - group.item.state is defined
    - group.item.state == "absent"

- name: Set groups to create fact
  set_fact:
    create_groups: "{{ create_groups + [group.item] }}"
  loop: "{{ groups_get_result.results }}"
  loop_control:
    loop_var: "group"
    label: "{{ group.item.name }}"
  when:
    - group.json.count == 0
    - group.item.state is not defined or group.item.state != "absent"

- name: Create groups
  uri:
    url: "{{ pulp_group_url }}"
    user: "{{ pulp_username }}"
    password: "{{ pulp_password }}"
    force_basic_auth: true
    method: POST
    status_code: 201
    body:
      name: "{{ item.name }}"
    body_format: form-urlencoded
  loop: "{{ create_groups }}"
  loop_control:
    label: "{{ item.name }}"
  changed_when: true

- name: Remove groups
  uri:
    url: "{{ pulp_url }}{{ item.pulp_href }}"
    user: "{{ pulp_username }}"
    password: "{{ pulp_password }}"
    force_basic_auth: true
    method: DELETE
    status_code: 204
    body_format: form-urlencoded
  loop: "{{ remove_groups }}"
  loop_control:
    label: "{{ item.name }}"
  changed_when: true
