---
- name: Query source repository
  uri:
    url: "{{ pulp_url }}/pulp/api/v3/repositories/container/container{% if item.src_is_push | default(false) | bool %}-push{% endif %}/?name={{ item.src_repo | urlencode | regex_replace('/','%2F') }}"
    user: "{{ pulp_username }}"
    password: "{{ pulp_password }}"
    method: GET
    status_code: 200
    force_basic_auth: true
  register: src_repo
  when: item.state | default != 'absent'

- name: Assert that source repository exists
  assert:
    that:
      src_repo.json.results | length > 0
  when: item.state | default != 'absent'

- name: Query destination repository
  uri:
    url: "{{ pulp_url }}/pulp/api/v3/repositories/container/container/?name={{ item.dest_repo | urlencode | regex_replace('/','%2F') }}"
    user: "{{ pulp_username }}"
    password: "{{ pulp_password }}"
    method: GET
    status_code: 200
    force_basic_auth: true
  register: dest_repo

- name: Assert that destination repository exists
  assert:
    that:
      dest_repo.json.results | length > 0

- name: Query tags
  uri:
    url: "{{ pulp_url }}/pulp/api/v3/content/container/tags/?name__in={{ item.tags | join(',') | urlencode | regex_replace('/','%2F') }}&repository_version={{ repo.json.results[0].latest_version_href | urlencode | regex_replace('/','%2F')  }}"
    user: "{{ pulp_username }}"
    password: "{{ pulp_password }}"
    method: GET
    status_code: 200
    force_basic_auth: true
  register: tags
  vars:
    repo: "{{ src_repo if item.state | default != 'absent' else dest_repo }}"

# NOTE: Currently we don't verify that all tags exist. This can be fixed when we specify a different tag for each repo.

- name: Add or remove content units
  uri:
    url: "{{ pulp_url }}{{ dest_repo.json.results[0].pulp_href }}{% if item.state | default != 'absent' %}add{% else %}remove{% endif %}/"
    user: "{{ pulp_username }}"
    password: "{{ pulp_password }}"
    method: POST
    status_code: 202
    force_basic_auth: true
    body:
      content_units: "{{ tags.json.results | map(attribute='pulp_href') | list }}"
    body_format: json
  register: task

- name: Wait for task to complete
  uri:
    url: "{{ pulp_url }}{{ task.json.task }}"
    user: "{{ pulp_username }}"
    password: "{{ pulp_password }}"
    method: GET
    status_code: 200
    force_basic_auth: true
  register: result
  until: result.json.state not in ['waiting', 'running']
  retries: 30
  delay: 2
  failed_when: result.json.state != 'completed'
