---
- name: Setup container repositories
  pulp.squeezer.container_repository:
    pulp_url: "{{ pulp_url }}"
    username: "{{ pulp_username }}"
    password: "{{ pulp_password }}"
    validate_certs: "{{ pulp_validate_certs | bool }}"
    name: "{{ item.name }}"
    state: "{{ item.state }}"
  with_items: "{{ pulp_repository_container_repos }}"
  loop_control:
    label: "{{ item.name }}"

- name: Setup container remotes
  pulp.squeezer.container_remote:
    pulp_url: "{{ pulp_url }}"
    username: "{{ pulp_username }}"
    password: "{{ pulp_password }}"
    validate_certs: "{{ pulp_validate_certs | bool }}"
    name: "{{ item.name }}-remote"
    ca_cert: "{{ item.ca_cert | default(omit) }}"
    client_cert: "{{ item.client_cert | default(omit) }}"
    client_key: "{{ item.client_key | default(omit) }}"
    download_concurrency: "{{ item.download_concurrency | default(omit) }}"
    exclude_tags: "{{ item.exclude_tags | default(omit) }}"
    include_tags: "{{ item.include_tags | default(omit) }}"
    policy: "{{ item.policy | default(omit) }}"
    proxy_url: "{{ item.proxy_url | default(omit) }}"
    proxy_username: "{{ item.proxy_username | default(omit) }}"
    proxy_password: "{{ item.proxy_password | default(omit) }}"
    remote_username: "{{ item.remote_username | default(omit) }}"
    remote_password: "{{ item.remote_password | default(omit) }}"
    tls_validation: "{{ item.tls_validation | default(omit) }}"
    upstream_name: "{{ item.upstream_name | default(item.name) }}"
    url: "{{ item.url | default(omit) }}"
    state: "{{ item.state }}"
  with_items: "{{ pulp_repository_container_repos }}"
  when: item.url is defined
  loop_control:
    label: "{{ item.name }}"

- name: Sync container remotes into repositories
  pulp.squeezer.container_sync:
    pulp_url: "{{ pulp_url }}"
    username: "{{ pulp_username }}"
    password: "{{ pulp_password }}"
    validate_certs: "{{ pulp_validate_certs | bool }}"
    repository: "{{ item.name }}"
    remote: "{{ item.name }}-remote"
  with_items: "{{ pulp_repository_container_repos }}"
  when:
    - item.url is defined
    - item.state == "present"
  loop_control:
    label: "{{ item.name }}"
