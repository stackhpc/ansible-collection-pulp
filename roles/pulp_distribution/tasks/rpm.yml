---
- name: Query repositories
  pulp.squeezer.rpm_repository:
    pulp_url: "{{ pulp_url }}"
    username: "{{ pulp_username }}"
    password: "{{ pulp_password }}"
    validate_certs: "{{ pulp_validate_certs | bool }}"
  register: pulp_repos_list

- name: Query publications
  pulp.squeezer.rpm_publication:
    pulp_url: "{{ pulp_url }}"
    username: "{{ pulp_username }}"
    password: "{{ pulp_password }}"
    validate_certs: "{{ pulp_validate_certs | bool }}"
  register: pulp_pubs_list

- name: Query distributions
  pulp.squeezer.rpm_distribution:
    pulp_url: "{{ pulp_url }}"
    username: "{{ pulp_username }}"
    password: "{{ pulp_password }}"
    validate_certs: "{{ pulp_validate_certs | bool }}"
  register: pulp_dists_list

- name: Ensure RPM distributions are defined
  vars:
    publication: >-
      {{ item | stackhpc.pulp.find_publication_for_distribution(pulp_repos_list.repositories,
                                                                pulp_pubs_list.publications,
                                                                pulp_dists_list.distributions) }}
    pub_has_dists: >-
      {{ publication | stackhpc.pulp.publication_has_distributions(pulp_pubs_list.publications,
                                                                   pulp_dists_list.distributions) }}
  pulp.squeezer.rpm_distribution:
    pulp_url: "{{ pulp_url }}"
    username: "{{ pulp_username }}"
    password: "{{ pulp_password }}"
    validate_certs: "{{ pulp_validate_certs | bool }}"
    name: "{{ item.name }}"
    base_path: "{{ item.base_path | default(omit) }}"
    publication: "{{ publication.pulp_href if item.state == 'present' else omit }}"
    content_guard: "{{ item.content_guard | default(omit) }}"
    state: "{{ item.state }}"
  with_items: "{{ pulp_distribution_rpm }}"
  when: >-
    item.state == 'absent' or
    not (item.skip_existing | default(pulp_distribution_rpm_skip_existing) | bool and pub_has_dists)
