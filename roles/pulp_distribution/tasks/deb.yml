---
- name: Query repositories
  pulp.squeezer.deb_repository:
    pulp_url: "{{ pulp_url }}"
    username: "{{ pulp_username }}"
    password: "{{ pulp_password }}"
    validate_certs: "{{ pulp_validate_certs | bool }}"
  register: pulp_repos_list

- name: Query publications
  pulp.squeezer.deb_publication:
    pulp_url: "{{ pulp_url }}"
    username: "{{ pulp_username }}"
    password: "{{ pulp_password }}"
    validate_certs: "{{ pulp_validate_certs | bool }}"
  register: pulp_pubs_list

# Verbatim publications use a different API endpoint than regular Deb
# publications.
- name: Query verbatim publications
  pulp.squeezer.deb_publication:
    pulp_url: "{{ pulp_url }}"
    username: "{{ pulp_username }}"
    password: "{{ pulp_password }}"
    validate_certs: "{{ pulp_validate_certs | bool }}"
    mode: "verbatim"
  register: pulp_verbatim_pubs_list

- name: Query distributions
  pulp.squeezer.deb_distribution:
    pulp_url: "{{ pulp_url }}"
    username: "{{ pulp_username }}"
    password: "{{ pulp_password }}"
    validate_certs: "{{ pulp_validate_certs | bool }}"
  register: pulp_dists_list

- name: Ensure Deb distributions are defined
  vars:
    all_pubs_list: "{{ pulp_pubs_list.publications + pulp_verbatim_pubs_list.publications }}"
    publication: >-
      {{ item | stackhpc.pulp.find_publication_for_distribution(pulp_repos_list.repositories,
                                                                all_pubs_list,
                                                                pulp_dists_list.distributions) }}
    pub_has_dists: >-
      {{ publication | stackhpc.pulp.publication_has_distributions(all_pubs_list,
                                                                   pulp_dists_list.distributions) }}
  pulp.squeezer.deb_distribution:
    pulp_url: "{{ pulp_url }}"
    username: "{{ pulp_username }}"
    password: "{{ pulp_password }}"
    validate_certs: "{{ pulp_validate_certs | bool }}"
    name: "{{ item.name }}"
    base_path: "{{ item.base_path | default(omit) }}"
    publication: "{{ publication.pulp_href if item.state == 'present' else omit }}"
    content_guard: "{{ item.content_guard | default(omit) }}"
    state: "{{ item.state }}"
  with_items: "{{ pulp_distribution_deb }}"
  when: >-
    item.state == 'absent' or
    not (item.skip_existing | default(pulp_distribution_deb_skip_existing) | bool and pub_has_dists)
