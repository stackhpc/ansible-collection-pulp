---
- name: Query repositories
  pulp.squeezer.deb_repository:
    pulp_url: "{{ pulp_url }}"
    username: "{{ pulp_username }}"
    password: "{{ pulp_password }}"
    validate_certs: "{{ pulp_validate_certs | bool }}"
  register: pulp_repos_list

- name: Query publications
  pulp.squeezer.deb_publication:
    pulp_url: "{{ pulp_url }}"
    username: "{{ pulp_username }}"
    password: "{{ pulp_password }}"
    validate_certs: "{{ pulp_validate_certs | bool }}"
  register: pulp_pubs_list

- name: Query distributions
  pulp.squeezer.deb_distribution:
    pulp_url: "{{ pulp_url }}"
    username: "{{ pulp_username }}"
    password: "{{ pulp_password }}"
    validate_certs: "{{ pulp_validate_certs | bool }}"
  register: pulp_dists_list

- name: Ensure Deb distributions are defined
  vars:
    repo: "{{ pulp_repos_list.repositories | selectattr('name', 'equalto', item.repository) | first }}"
    # If the distribution references a specific version:
    specific_pub: "{{ pulp_pubs_list.publications | selectattr('repository_version', 'equalto', repo.pulp_href ~ 'versions/' ~ item.version | default ~ '/') }}"
    # If the distribution uses the latest version:
    latest_pub: "{{ pulp_pubs_list.publications | selectattr('repository', 'equalto', repo.pulp_href) | sort(attribute='repository_version', reverse=True) }}"
    # If another distribution is being promoted to this one:
    promoted_dist: "{{ pulp_dists_list.distributions | selectattr('name', 'equalto', item.distribution | default) }}"
    promoted_pub: "{{ pulp_pubs_list.publications | selectattr('pulp_href', 'equalto', (promoted_dist | first).publication | default) }}"
    # Pick the right publication based on the type of distribution.
    pubs: "{{ specific_pub if item.version is defined else promoted_pub if item.distribution is defined else latest_pub }}"
    # Whether any distributions exist for this publication.
    pub_has_dists: >-
      {{ pulp_dists_list.distributions | selectattr('publication', 'equalto', pubs[0].pulp_href if item.state == 'present' else None) | list | length > 0 }}
  pulp.squeezer.deb_distribution:
    pulp_url: "{{ pulp_url }}"
    username: "{{ pulp_username }}"
    password: "{{ pulp_password }}"
    validate_certs: "{{ pulp_validate_certs | bool }}"
    name: "{{ item.name }}"
    base_path: "{{ item.base_path }}"
    publication: "{{ pubs[0].pulp_href if item.state == 'present' else omit }}"
    state: "{{ item.state }}"
  with_items: "{{ pulp_distribution_deb }}"
  when: >-
    item.state == 'absent' or
    not (item.skip_existing | default(pulp_distribution_deb_skip_existing) | bool and pub_has_dists)
